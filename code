 user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.
      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
    <link
      href="https://fonts.googleapis.com/css?family=Roboto:300,400,700,&display=swap"
      rel="stylesheet"
    />
    <title>Box Office</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
 10  
src/components/actor/ActorCard.js

import React from 'react';

import { StyledActorCard } from './ActorCard.styled';

const ActorCard = ({ image, name, gender, country, birthday, deathday }) => {
  return (
    <div>
      <div>
    <StyledActorCard>
      <div className="img-wrapper">
        <img src={image} alt="actor" />
      </div>
      <h1>
        {name} {gender ? `(${gender})` : null}
      </h1>
      <p>{country ? `Comes from ${country}` : 'No country known'}</p>
      {birthday ? <p>Born {birthday}</p> : null}
      <p>{deathday ? `Died ${deathday}` : 'Alive'}</p>
    </div>
      <p className="deathday">{deathday ? `Died ${deathday}` : 'Alive'}</p>
    </StyledActorCard>
  );
};
export default ActorCard;
 11  
src/components/actor/ActorCard.styled.js

import styled from 'styled-components';

import { SearchCard } from '../styled';

export const StyledActorCard = styled(SearchCard)`
  .deathday {
    margin: 0;
    margin-top: 15px;
    font-weight: bold;
  }
`;
  5  
src/components/actor/ActorGrid.js

import ActorCard from './ActorCard';

import IMAGE_NOT_FOUND from '../../images/not-found.png';
import { FlexGrid } from '../styled';

const ActorGrid = ({ data }) => {
  return (
    <div>
    <FlexGrid>
      {data.map(({ person }) => (
        <ActorCard
          key={person.id}

          image={person.image ? person.image.medium : IMAGE_NOT_FOUND}
        />
      ))}
    </div>
    </FlexGrid>
  );
};

 10  
src/components/show/ShowCard.js

import React from 'react';
import { Link } from 'react-router-dom';

import { StyledShowCard } from './ShowCard.styled';

const ShowCard = ({ id, image, name, summary }) => {
  const summaryAsText = summary
    ? `${summary.split(' ').slice(0, 10).join(' ').replace(/<.+?>/g, '')}...`
    : 'No description';

  return (
    <div>
      <div>
    <StyledShowCard>
      <div className="img-wrapper">
        <img src={image} alt="show" />
      </div>

      <h1>{name}</h1>

      <p>{summaryAsText}</p>

      <div>
      <div className="btns">
        <Link to={`/show/${id}`}>Read more</Link>
        <button type="button">Star me</button>
      </div>
    </div>
    </StyledShowCard>
  );
};

 33  
src/components/show/ShowCard.styled.js

import styled from 'styled-components';

import { SearchCard } from '../styled';

export const StyledShowCard = styled(SearchCard)`
  .btns {
    margin-top: 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    a {
      text-decoration-color: #000;
      color: #000;
      &:hover {
        text-decoration-color: blue;
        color: blue;
      }
    }
    button {
      outline: none;
      border: 1px solid #8e8e8e;
      border-radius: 15px;
      padding: 5px 20px;
      background-color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      &:hover {
        cursor: pointer;
      }
    }
  }
`;
  6  
src/components/show/ShowGrid.js
import React from 'react';
import ShowCard from './ShowCard';

import { FlexGrid } from '../styled';

import IMAGE_NOT_FOUND from '../../images/not-found.png';

const ShowGrid = ({ data }) => {
  return (
    <div>
    <FlexGrid>
      {data.map(({ show }) => (
        <ShowCard
          key={show.id}
@@ -15,7 +17,7 @@ const ShowGrid = ({ data }) => {
          summary={show.summary}
        />
      ))}
    </div>
    </FlexGrid>
  );
};

 36  
src/components/styled.js

import styled from 'styled-components';

export const FlexGrid = styled.div`
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
`;

export const SearchCard = styled.div`
  width: 300px;
  height: 100%;
  margin: 0 15px 40px;
  .img-wrapper {
    width: 100%;
    border-radius: 40px;
    height: 420px;
    overflow: hidden;
    border: 1px solid #ddd;
    img {
      object-fit: cover;
      height: 100%;
      width: 100%;
    }
  }
  h1 {
    margin: 10px 0;
    font-size: 21px;
  }
  p {
    margin: 0;
  }
`;
 13  
src/index.css

body {
  font-family: 'Roboto', sans-serif;
  font-size: 18px;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
  padding-top: 40px;
}
